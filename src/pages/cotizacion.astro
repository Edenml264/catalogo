---
// Esta página mostrará la cotización para el cliente
---

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cotización | Catálogo de Servicios</title>
    <style>
        body { font-family: 'Inter', sans-serif; background: #f9f9f9; margin: 0; padding: 0; color: #333;}
        .cotizacion-container { max-width: 700px; margin: 30px auto; background: #fff; border-radius: 10px; box-shadow: 0 2px 8px rgba(0,0,0,0.08); padding: 30px; }
        h2 { text-align: center; color: #2563eb; }
        .datos-cliente, .datos-vendedor, .datos-empresa { margin-bottom: 1.25rem; }
        .datos-cliente h3, .datos-vendedor h3, .datos-empresa h3 { color: #333; border-bottom: 1px solid #eee; padding-bottom: 5px; margin-bottom: 15px; }
        .datos-cliente p, .datos-vendedor p, .datos-empresa p { margin: 4px 0; }
        table { width: 100%; border-collapse: collapse; margin-bottom: 30px; }
        th, td { border: 1px solid #eee; padding: 10px; text-align: left; }
        th { background: #f0f4f8; }
        .total { text-align: right; font-size: 1.2em; font-weight: bold; color: #2563eb; }
        .footer { text-align: center; color: #888; font-size: 0.95em; margin-top: 30px; }
        .cabecera-cotizacion {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-bottom: 1.5rem;
        }
        .logo-empresa {
            flex: 0 0 auto;
        }
        .titulo-cotizacion {
            flex: 1 1 auto;
            text-align: center;
        }
        .info-empresa {
            flex: 0 0 auto;
            text-align: right;
            font-size: 0.96em;
            color: #444;
        }
        .info-empresa p { margin: 4px 0; }
        .btn-imprimir {
            padding: 8px 18px; 
            background: #2563eb; 
            color: white; 
            border: none; 
            border-radius: 5px; 
            font-size: 15px; 
            cursor: pointer;
            transition: background-color 0.3s;
        }
        .btn-imprimir:hover {
            background: #1d4ed8;
        }
        .datos-vendedor { 
            text-align: right;
        }
        
        @media (max-width: 600px) {
            .cabecera-cotizacion {
                flex-direction: column;
                align-items: flex-start;
                text-align: left;
            }
            .titulo-cotizacion {
                text-align: left;
                margin: 10px 0;
            }
            .info-empresa {
                text-align: left;
                margin-top: 10px;
            }
            .datos-vendedor { 
                text-align: left;
            }
        }
        @media print {
            /* 1. Selecciona el contenedor principal */
            .flex {
                /* Fuerza a que el diseño en impresión sea 'flex' para colocar los hijos lado a lado */
                display: flex !important; 
                
                /* Asegura que los hijos se alineen en una fila */
                flex-direction: row !important; 
                
                /* Distribuye el espacio entre las columnas para que quepan en la página */
                width: 100%;
                gap: 20px; /* Espacio entre las columnas */
            }
            
            /* 2. Aplica un ancho equitativo a cada columna (50% del total) */
            .datos-cliente,
            .datos-vendedor {
                /* 'flex-basis' y 'width' para asegurar que cada uno ocupe la mitad */
                flex-basis: 50% !important; 
                width: 50% !important;
                
                /* Asegura que no haya saltos forzados de página dentro de los bloques */
                break-inside: avoid;
            }
            
            /* Opcional: Eliminar cualquier 'gap' que aplique Tailwind en pantallas */
            .gap-4 {
                gap: 0 !important;
            }
            .print-buttons {
                display: none;
            }
        }
    </style>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;700;900&display=swap" rel="stylesheet" />
</head>
<body>
    <div class="cotizacion-container">
        <div class="cabecera-cotizacion">
            <div class="logo-empresa">
                <img src="/logo_sio.webp" alt="Logo de la empresa" style="height:60px;">
            </div>
            <div class="titulo-cotizacion">
                <h2>Estimación de servicios</h2>
            </div>
            <div class="info-empresa">
                <p><strong>Cotización:</strong> <span id="numeroCotizacion"></span></p>
                <p>ventas@sionline.com.mx</p>
                <p>624-217-1765</p>
                <p>San Jose del Cabo, BCS, México</p>
            </div>
        </div>

        <div class="flex flex-col md:flex-row gap-4 mb-5 justify-between">
            <div class="datos-cliente">
                <h3>Datos del Cliente</h3>
                <p><strong>Nombre:</strong> <span id="nombreCliente"></span></p>
                <p><strong>Correo electrónico:</strong> <br><span id="correoCliente"></span></p>
                <p><strong>Teléfono:</strong> <span id="telefonoCliente"></span></p>
                <p><strong>Fecha:</strong> <span id="fechaCotizacion"></span></p>
            </div>
            <div class="datos-vendedor">
                <h3>Datos del Vendedor</h3>
                <p><strong>Nombre:</strong> <span id="nombreVendedor"></span></p>
                <p><strong>Correo electrónico:</strong> <br><span id="correoVendedor"></span></p>
                <p><strong>Teléfono:</strong> <span id="telefonoVendedor"></span></p>
            </div>
        </div>

        <table>
            <thead>
                <tr>
                    <th>Concepto</th>
                    <th>Detalle</th>
                    <th>Precio</th>
                </tr>
            </thead>
            <tbody id="tabla-cotizacion-body">
                <!-- Las filas se llenarán dinámicamente con JS -->
            </tbody>
        </table>
        <div class="total">
            Total estimado: <span id="totalCotizacion"></span>
        </div>
        <div class="print-buttons" style="text-align:right; margin-top:20px; margin-bottom:20px;">
            <button onclick="window.print()" class="btn-imprimir">Imprimir</button>
        </div>
        <div class="footer">
            <p>Gracias por confiar en nuestros servicios. La cotización es válida por 15 días y no incluye impuestos.<br>Términos y Condiciones: <br> 
                El proyecto comienza con un anticipo del 70% y el saldo se paga antes de la entrega final. Los tiempos de entrega dependen de la entrega puntual de materiales por parte del cliente. Se incluyen dos rondas de revisiones; adicionales se facturarán por separado. El cliente es responsable de cubrir los costos de licencias de terceros. 
                Toda la información proporcionada será tratada de manera confidencial. 
                El soporte y mantenimiento no están incluidos, pero pueden contratarse por separado. 
                Las cancelaciones a mitad del proyecto retendrán el anticipo como compensación.</p>
        </div>
    </div>
    <script type="module">
    // Función para generar un número de cotización aleatorio
    function generarNumeroCotizacion() {
        const ahora = new Date();
        const año = ahora.getFullYear();
        const numero = Math.floor(10000 + Math.random() * 90000); // Número de 5 dígitos
        return `COT-${año}-${numero}`;
    }

    // Obtener datos de localStorage
    document.addEventListener('DOMContentLoaded', function() {
        // Establecer número de cotización
        const numeroCotizacion = generarNumeroCotizacion();
        document.getElementById('numeroCotizacion').textContent = numeroCotizacion;
        const datosCotizacionStr = localStorage.getItem('datosCotizacion');
        if (datosCotizacionStr) {
            try {
                const datos = JSON.parse(datosCotizacionStr);
                
                // Función auxiliar para actualizar elementos del DOM de forma segura
                function actualizarElemento(id, valor) {
                    const elemento = document.getElementById(id);
                    if (elemento) {
                        elemento.textContent = valor !== null && valor !== undefined ? String(valor) : '';
                    }
                }
                
                // Llenar datos del cliente
                actualizarElemento('nombreCliente', datos.nombre);
                actualizarElemento('correoCliente', datos.correo);
                actualizarElemento('telefonoCliente', datos.telefono);
                actualizarElemento('fechaCotizacion', new Date().toLocaleDateString('es-MX'));
                
                // Actualizar datos de cotización en el objeto para el correo
                datos.numeroCotizacion = document.getElementById('numeroCotizacion').textContent;
                
                // Llenar datos del vendedor si existen
                if (datos.vendedor) {
                    actualizarElemento('nombreVendedor', datos.vendedor.name || '');
                    actualizarElemento('correoVendedor', datos.vendedor.email || '');
                    actualizarElemento('telefonoVendedor', datos.vendedor.phone || '');
                } else {
                    actualizarElemento('nombreVendedor', '');
                    actualizarElemento('correoVendedor', '');
                    actualizarElemento('telefonoVendedor', '');
                }
                
                // Llenar tabla de cotización de forma dinámica y estilizada
                const camposTabla = [
                    { label: 'Servicio', detalle: datos.servicio, precio: datos.precioBase },
                    { label: 'Plan', detalle: datos.plan },
                    { label: 'Número de páginas', detalle: datos.numPaginas ? datos.numPaginas + ' páginas' : '', precio: datos.precioPaginas },
                    { label: 'Diseño personalizado', detalle: datos.diseno, precio: datos.precioDiseno },
                    { label: 'Integración con pagos en línea', detalle: datos.pagos, precio: datos.precioPagos },
                    { label: 'Optimización SEO', detalle: datos.seo, precio: datos.precioSeo },
                    // Campos extra para Renta de equipo de cómputo
                    { label: 'Días de renta', detalle: datos.diasRenta },
                    { label: 'Cantidad de equipos', detalle: datos.cantidadEquipos }
                ];
                const tablaBody = document.getElementById('tabla-cotizacion-body');
                if (tablaBody) {
                    tablaBody.innerHTML = '';
                    camposTabla.forEach(campo => {
                        // Solo mostrar filas con algún valor relevante
                        if ((campo.detalle !== undefined && campo.detalle !== '' && campo.detalle !== null && campo.detalle !== 'No') || (campo.precio !== undefined && campo.precio !== '' && campo.precio !== null && campo.precio !== '$0 MXN')) {
                            const fila = document.createElement('tr');
                            fila.innerHTML = `<td>${campo.label}</td><td>${campo.detalle !== undefined ? campo.detalle : ''}</td><td>${campo.precio !== undefined ? campo.precio : ''}</td>`;
                            tablaBody.appendChild(fila);
                        }
                    });
                }
                
                // Llenar opciones adicionales
                actualizarElemento('numPaginas', datos.numPaginas ? datos.numPaginas + ' páginas' : '');
                actualizarElemento('precioPaginas', datos.precioPaginas);
                
                actualizarElemento('diseno', datos.diseno);
                actualizarElemento('precioDiseno', datos.precioDiseno);
                
                actualizarElemento('pagos', datos.pagos);
                actualizarElemento('precioPagos', datos.precioPagos);
                
                actualizarElemento('seo', datos.seo);
                actualizarElemento('precioSeo', datos.precioSeo);
                
                // Total
                actualizarElemento('totalCotizacion', datos.total);

                // Mostrar detalles dinámicos del servicio y plan
                const servicios = typeof servicesData === 'object' ? servicesData : window.serviciosCatalogo;
                const servicioSeleccionado = datos.servicio;
                const planSeleccionado = datos.plan;
                let servicioObj = null;
                let planObj = null;
                if (servicios && Array.isArray(servicios)) {
                    servicioObj = servicios.find(s => s.title === servicioSeleccionado);
                    if (servicioObj && servicioObj.plans && Array.isArray(servicioObj.plans)) {
                        planObj = servicioObj.plans.find(p => p.name === planSeleccionado);
                    }
                }
                // Mostrar descripción del servicio
                if (servicioObj) {
                    const descDiv = document.createElement('div');
                    descDiv.className = 'servicio-descripcion';
                    descDiv.innerHTML = `<h3 style="color:#2563eb;margin-top:30px;">Descripción del servicio</h3><p>${servicioObj.description || ''}</p>`;
                    document.querySelector('.cotizacion-container').appendChild(descDiv);
                    // Mostrar plan (si existe)
                    if (planObj) {
                        const planDiv = document.createElement('div');
                        planDiv.className = 'plan-descripcion';
                        planDiv.innerHTML = `<h3 style="color:#2563eb;margin-top:20px;">Plan seleccionado: ${planObj.name}</h3>` +
                            (planObj.description ? `<p>${planObj.description}</p>` : '') +
                            (planObj.features && planObj.features.length ? `<ul style="margin-left:20px;">${planObj.features.map(f => `<li>${f}</li>`).join('')}</ul>` : '');
                        document.querySelector('.cotizacion-container').appendChild(planDiv);
                    }
                    // Mostrar FAQs
                    if (servicioObj.faq && servicioObj.faq.length) {
                        const faqDiv = document.createElement('div');
                        faqDiv.className = 'faq-cotizacion';
                        faqDiv.innerHTML = `<h3 style="color:#2563eb;margin-top:20px;">Preguntas frecuentes</h3>` +
                            servicioObj.faq.map(faq => `<details style="margin-bottom:8px;"><summary style="font-weight:bold;cursor:pointer;">${faq.question}</summary><p style="margin:8px 0 0 0;">${faq.answer}</p></details>`).join('');
                        document.querySelector('.cotizacion-container').appendChild(faqDiv);
                    }
                }
            } catch (error) {
                console.error('Error al procesar los datos de la cotización:', error);
                // Mostrar mensaje de error
                document.body.innerHTML = '<div style="text-align:center; padding:50px;"><h2>Error al procesar la cotización</h2><p>Ha ocurrido un error al procesar los datos de la cotización.</p><p><a href="/cotizador" style="color:#2563eb;">Volver al cotizador</a></p></div>';
            }
        } else {
            // Si no hay datos, mostrar mensaje
            document.body.innerHTML = '<div style="text-align:center; padding:50px;"><h2>No hay datos de cotización disponibles</h2><p>Por favor, regrese al formulario de cotización para generar una nueva.</p><p><a href="/cotizador" style="color:#2563eb;">Volver al cotizador</a></p></div>';
        }
    });
    </script>
</body>
</html>
